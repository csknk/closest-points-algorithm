p *(SxEnd)
n
p dl
p dr
n
n
p closestIntermediate
n
p delta
n
p ds
n
n
p result
n
n
p size
p *xStart
p *SxStart
p *SxEnd
p *median
n
p dl
p dr
n
n
n
n
p delta
n
p ds
n
n
p result
n
n
p size
p *SxStart
n
p dl
p dr
n
n
p closestIntermediate
n
n
p ds
del
b closest.cpp:51
r <test7
n
p lessThanDelta[i]
p lessThanDelta[j]
n
n
n
n
n
p closest
n
p i
n
p j
n
p lessThanDelta[i]
p lessThanDelta[j]
p currentDist
p minDist
n
n
p j
p lessThanDelta[j]
n
p currentDist
n
n
n
p currentDist
n
p j
p lessThanDelta[j]
pvector lessThanDelta
p lessThanDelta.size()
make
file main
r < test7
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
del
c
r < test8
b closest.cpp:44
r < test8
pvector lessThanDelta
n
n
n
n
p closest
n
n
n
n
p closest
n
n
p j
p i
p lessThanDelta
pvector lessThanDelta
n
n
pvector lessThanDelta
n
n
n
pvector lessThanDelta
n
n
n
n
n
n
n
n
n
c
q
b closest.cpp:69 if SxStart.x == 1 && SxStart.y == 1
r < fail
p *SxStart
n
p *SxStart
del
b closest.cpp:69 if SxStart->x == 1 && SxStart->y == 1
r < fail
del
b closest.cpp:69
r < fail
n
p *SxStart
p *SxEnd
p *(SxEnd - 1)
n
n
n
n
p size
n
p median
p *median
n
p midPoint
s
n
p *SxEnd
n
p size
n
n
n
n
p *median
n
p midPoint
p *SxEnd
p *median
s
n
p SxEnd
p *SxEnd
p size
n
p size
n
n
n
s
n
n
n
p result
n
s
p *SxStart
p *SxEnd
n
n
p size
bt
frame 1
frame 2
frame 3
frame 4
frame
bt
del
b closest.cpp:70
r < fail
del
b closest.cpp:37
r < fail
p *SyEnd
p midPoint 
p delta 
n
pvector strip
p *i
p *SyStart
p *SyEnd
bt
p *SxStart
p *SxStart
p *SyStart
q
